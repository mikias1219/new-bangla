# Generated by Django 5.2.7 on 2025-10-27 20:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_alter_apikey_provider_subscription_payment'),
        ('chat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialMediaAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('linkedin', 'LinkedIn'), ('messenger', 'Facebook Messenger')], max_length=20)),
                ('account_name', models.CharField(max_length=100)),
                ('account_id', models.CharField(help_text='Platform-specific account ID', max_length=255)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('profile_url', models.URLField(blank=True)),
                ('access_token', models.TextField(blank=True, help_text='OAuth access token')),
                ('refresh_token', models.TextField(blank=True, help_text='OAuth refresh token')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('webhook_url', models.URLField(blank=True, help_text='Webhook URL for receiving messages')),
                ('webhook_secret', models.CharField(blank=True, help_text='Webhook verification secret', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_reply_enabled', models.BooleanField(default=True)),
                ('business_hours_only', models.BooleanField(default=False)),
                ('business_hours_start', models.TimeField(blank=True, null=True)),
                ('business_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_accounts', to='chat.aiagent')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'Social Media Account',
                'verbose_name_plural': 'Social Media Accounts',
                'unique_together': {('organization', 'platform', 'account_id')},
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAutoReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_keywords', models.JSONField(default=list, help_text='Keywords that trigger this reply')),
                ('trigger_type', models.CharField(choices=[('keyword', 'Keyword Match'), ('exact', 'Exact Match'), ('contains', 'Contains Text'), ('regex', 'Regular Expression')], default='keyword', max_length=20)),
                ('response_text', models.TextField()),
                ('response_type', models.CharField(choices=[('text', 'Text Only'), ('with_buttons', 'Text with Buttons'), ('quick_replies', 'Quick Replies'), ('template', 'Template Message')], default='text', max_length=20)),
                ('response_buttons', models.JSONField(default=list, help_text='Button configurations')),
                ('response_attachments', models.JSONField(default=list, help_text='Attachment URLs')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=0, help_text='Higher priority replies are checked first')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Max times this reply can be used', null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('delay_seconds', models.PositiveIntegerField(default=0, help_text='Delay before sending reply')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_replies', to='social_media.socialmediaaccount')),
            ],
            options={
                'verbose_name': 'Social Media Auto Reply',
                'verbose_name_plural': 'Social Media Auto Replies',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100)),
                ('event_id', models.CharField(max_length=255, unique=True)),
                ('raw_payload', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='social_media.socialmediaaccount')),
            ],
            options={
                'verbose_name': 'Social Media Webhook',
                'verbose_name_plural': 'Social Media Webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=20)),
                ('messages_received', models.PositiveIntegerField(default=0)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('ai_responses', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.DurationField(blank=True, null=True)),
                ('response_rate', models.FloatField(default=0.0)),
                ('customer_satisfaction', models.FloatField(blank=True, null=True)),
                ('messages_with_attachments', models.PositiveIntegerField(default=0)),
                ('popular_content_types', models.JSONField(default=dict)),
                ('failed_webhooks', models.PositiveIntegerField(default=0)),
                ('failed_responses', models.PositiveIntegerField(default=0)),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='social_media.socialmediaaccount')),
            ],
            options={
                'verbose_name': 'Social Media Analytics',
                'verbose_name_plural': 'Social Media Analytics',
                'ordering': ['-date'],
                'unique_together': {('social_account', 'date', 'period')},
            },
        ),
        migrations.CreateModel(
            name='SocialMediaMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('incoming', 'Incoming'), ('outgoing', 'Outgoing'), ('system', 'System')], default='incoming', max_length=10)),
                ('platform_message_id', models.CharField(help_text='Platform-specific message ID', max_length=255)),
                ('sender_id', models.CharField(help_text="Sender's platform ID", max_length=255)),
                ('sender_name', models.CharField(blank=True, max_length=255)),
                ('thread_id', models.CharField(blank=True, help_text='Platform thread/conversation ID', max_length=255)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('file', 'File'), ('location', 'Location')], default='text', max_length=20)),
                ('attachments', models.JSONField(default=list, help_text='List of attachment URLs/metadata')),
                ('ai_processed', models.BooleanField(default=False)),
                ('ai_response', models.TextField(blank=True)),
                ('ai_confidence', models.FloatField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_messages', to='chat.conversation')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_messages', to='accounts.organization')),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='social_media.socialmediaaccount')),
            ],
            options={
                'verbose_name': 'Social Media Message',
                'verbose_name_plural': 'Social Media Messages',
                'ordering': ['-received_at'],
                'indexes': [models.Index(fields=['social_account', 'thread_id'], name='social_medi_social__b0f01e_idx'), models.Index(fields=['platform_message_id'], name='social_medi_platfor_db8b7e_idx')],
            },
        ),
    ]
