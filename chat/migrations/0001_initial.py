# Generated by Django 5.2.7 on 2025-10-25 08:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='ai_avatars/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('training', 'Training')], default='active', max_length=20)),
                ('model_provider', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic'), ('google', 'Google AI'), ('azure', 'Azure OpenAI')], default='openai', max_length=50)),
                ('model_name', models.CharField(default='gpt-3.5-turbo', max_length=100)),
                ('system_prompt', models.TextField(help_text='System prompt defining AI personality and behavior')),
                ('temperature', models.FloatField(default=0.7, help_text='Creativity/randomness (0-2)')),
                ('max_tokens', models.PositiveIntegerField(default=1000)),
                ('supported_languages', models.JSONField(default=list, help_text='List of supported languages')),
                ('primary_language', models.CharField(default='en', max_length=10)),
                ('voice_enabled', models.BooleanField(default=False)),
                ('file_processing', models.BooleanField(default=False)),
                ('max_consecutive_responses', models.PositiveIntegerField(default=2, help_text='Max AI responses before suggesting human handoff')),
                ('handoff_triggers', models.JSONField(default=list, help_text='Keywords/phrases that trigger human handoff')),
                ('total_conversations', models.PositiveIntegerField(default=0)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_agents', to='accounts.organization')),
            ],
            options={
                'verbose_name': 'AI Agent',
                'verbose_name_plural': 'AI Agents',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('transferred', 'Transferred to Human'), ('abandoned', 'Abandoned')], default='active', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Auto-generated conversation title', max_length=255)),
                ('transfer_reason', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('ai_responses', models.PositiveIntegerField(default=0)),
                ('ai_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.aiagent')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='accounts.organization')),
                ('transferred_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferred_conversations', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('user', 'User'), ('ai', 'AI Agent'), ('human', 'Human Agent'), ('system', 'System')], max_length=10)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('text', 'Text'), ('voice', 'Voice'), ('file', 'File')], default='text', max_length=20)),
                ('voice_recording', models.FileField(blank=True, null=True, upload_to='voice_recordings/')),
                ('file_attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('confidence_score', models.FloatField(blank=True, help_text='AI confidence in response', null=True)),
                ('intent_detected', models.CharField(blank=True, max_length=100)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.conversation')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True)),
                ('categories', models.JSONField(default=list, help_text="Feedback categories (e.g., ['helpful', 'fast'])")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chat.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'unique_together': {('conversation', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('examples', models.JSONField(default=list, help_text='List of training examples')),
                ('responses', models.JSONField(default=list, help_text='List of possible responses')),
                ('confidence_threshold', models.FloatField(default=0.8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intents', to='chat.aiagent')),
            ],
            options={
                'verbose_name': 'Intent',
                'verbose_name_plural': 'Intents',
                'unique_together': {('ai_agent', 'name')},
            },
        ),
    ]
